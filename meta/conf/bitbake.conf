##################################################################
# Architecture-dependent build variables
##################################################################

BUILD_ARCH := "${@os.uname()[4]}"
BUILD_VENDOR = "pc"
BUILD_OS = "linux-gnu"
BUILD_SYS = "${BUILD_ARCH}-${BUILD_VENDOR}-${BUILD_OS}"

HOST_ARCH = "${BUILD_ARCH}"
HOST_VENDOR ="${BUILD_VENDOR}"
HOST_OS = "${BUILD_OS}"
HOST_SYS = "${BUILD_SYS}"

TARGET_ARCH = "aarch64"
TARGET_VENDOR = "rpi3"
TARGET_OS = "linux-gnu"
TARGET_SYS = "${TARGET_ARCH}-${TARGET_VENDOR}-${TARGET_OS}"

TARGET_ALIAS := "${TARGET_ARCH}-${TARGET_VENDOR}"

include conf/local.conf

##################################################################
# Package default variables
##################################################################

PN = "${@bb.parse.BBHandler.vars_from_file(d.getVar('FILE', False),d)[0]}"
PV = "${@bb.parse.BBHandler.vars_from_file(d.getVar('FILE', False),d)[1] or '1.0'}"
PR = "${@bb.parse.BBHandler.vars_from_file(d.getVar('FILE', False),d)[2] or '0'}"
PF = "${PN}-${PV}-${PR}"

P  = "${@bb.parse.BBHandler.vars_from_file(d.getVar('FILE', False),d)[0]}"
S  = "${P}-${PV}"

SRC_URI = ""
PV_REV  = "${@d.getVar('SRCREV')[:6]}"

##################################################################
# General directories for the build system
##################################################################

FILE_DIRNAME = "${@os.path.dirname(d.getVar('FILE', False))}"

PACROOT ?= "${TOPDIR}"
PACBASE  = "${PACROOT}/pacbase"

DL_DIR_TOP ?= "${PACROOT}"
SSTATE_TOP ?= "${PACROOT}"
DEPLOY_TOP ?= "${PACROOT}"

DL_DIR = "${DL_DIR_TOP}/pacstore"
SSTATE = "${SSTATE_TOP}/pacstate"
DEPLOY = "${DEPLOY_TOP}/pacdeploy/${TARGET_ALIAS}"

CACHE = "${PACBASE}/cache"
STAMP = "${PACBASE}/stamps/${PF}"
STAGE = "${PACBASE}/stage"
REPO  = "${PACBASE}/repo"

COMMON  = "${PACBASE}/work/common"
WORKDIR = "${PACBASE}/work/${PF}"
DEVROOT = "${WORKDIR}/devroot"
SRCDIR  = "${WORKDIR}/srcdir"
TARGET  = "${WORKDIR}/target"

FILES_DEVEL  = "${TARGET}/devel"
FILES_SHARE  = "${TARGET}/share"
FILES_PKG    = "${TARGET}/pkg"
FILES_DEPLOY = "${TARGET}/deploy"

W = "${WORKDIR}"
T = "${W}/temp"

##################################################################
# Build environment
##################################################################

SDK_PREFIX  = "/sdk_${TARGET_ALIAS}"
SDK_SYSROOT = "${SDK_PREFIX}/${TARGET_SYS}/sysroot"
SDK_SHARED  = "${SDK_PREFIX}/shared"

PATH_prepend = "${SDK_PREFIX}/bin:"
export PATH

export PKG_CONFIG_PATH = "${SDK_SYSROOT}/lib/pkgconfig:${SDK_SYSROOT}/usr/lib/pkgconfig"

CC_BUILD = "${BUILD_SYS}-gcc"
CXX_BUILD = "${BUILD_SYS}-g++"
AR_BUILD = "${BUILD_SYS}-gcc-ar"
RANLIB_BUILD = "${BUILD_SYS}-gcc-ranlib"

export CC = "${TARGET_SYS}-gcc"
export CXX = "${TARGET_SYS}-g++"
export AR = "${TARGET_SYS}-ar"
export AS = "${TARGET_SYS}-as"
export RANLIB = "${TARGET_SYS}-ranlib"

export LC_ALL = "C"

##################################################################
# Bitbake config
##################################################################

BBINCLUDELOGS = "True"
BBINCLUDELOGS_LINES = "80"

BB_LOGFMT = "log/{task}.log"
BB_VERBOSE_LOGS = "True"

BB_SIGNATURE_HANDLER = "basichash"
BB_HASHBASE_WHITELIST += "DL_DIR FILE_DIRNAME FILESPATH FILE HOME PATH PKGCACHE PWD SHELL SSTATE TERM TMUX USER"

BB_NUMBER_THREADS ?= "${@bb.utils.cpu_count()}"
